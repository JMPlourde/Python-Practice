#1 Jan 1900 was a Monday.
#Thirty days has September,
#April, June and November.
#All the rest have thirty-one,
#Saving February alone,
#Which has twenty-eight, rain or shine.
#And on leap years, twenty-nine.
#A leap year occurs on any year evenly divisible by 4, but not on a century unless it is divisible by 400.
#How many Sundays fell on the first of the month during the twentieth century (1 Jan 1901 to 31 Dec 2000)?

months = ['jan','feb','march','april','may','june','july','aug','sept','oct','nov','dec']
monthlen = {"jan":31,"feb":28,"march":31,"april":30,"may":31,"june":30,"july":31,"aug":31,"sept":30,"oct":31,"nov":30,'dec':31}

def leapyear(year):
    if year%400==0:
        if year%100==0:
            if year%4==0:
                return True
            else: 
                return False
        else: 
            return True
    else:
        return False

def weekday(x):
    if x == "Sunday" or x =="sunday":
        return 0
    if x == "Monday" or x=="monday":
        return 1
    if x == "Tuesday" or x=="tuesday":
        return 2
    if x == "Wednesday" or x=="wednesday":
        return 3
    if x == "Thursday" or x =="thursday":
        return 4
    if x == "Friday" or x =="friday":
        return 5
    if x == "saturday" or x =="Saturday":
        return 6    
    
def weekdaysinfirstofmonth(day,y,yearS,year1,year2):#pass x day of week, y as startday, yearS as startyear, year 1 as first year counted, year2 as lastyear  
    y=weekday(y)
    count = 0
    while yearS<=year2:
        for month in months:
            y+=monthlen[month]
            if monthlen[month] == "feb" and leapyear(yearS):
                y+=1
            if y%7 == weekday(day) and yearS >=year1 and yearS<=year2:
                count+=1
        yearS+=1
            
    print(count)
        
weekdaysinfirstofmonth("Sunday", "Monday", 1900,1901,2000) #order: day to be counted, first weekday of startyear, startyear, first year to count, last year to count 
